@use '@sass/main' as *;

.about {
	padding-top: px-to-rem(75);
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: flex-start;
}

.quote {
	width: px-to-rem(765);
	margin-top: px-to-rem(70);
}

.separator-wrap {
	margin-top: px-to-rem(65);
}

.activity {
	margin-top: px-to-rem(65);
}

@media only screen and (px-to-rem(1600) > width) {
	.quote {
		width: rubber-size(1600, 765, 1366, 718);
	}
}

@media only screen and (px-to-rem(1080) > width) {
	.about {
		padding-top: rubber-size(1080, 75, 900, 60);
	}

	.quote {
		margin-top: rubber-size(1080, 70, 900, 60);
		width: rubber-size(1080, 718, 900, 664);
	}

	.separator-wrap {
		margin-top: rubber-size(1080, 65, 900, 50);
	}

	.activity {
		margin-top: rubber-size(1080, 65, 900, 50);
	}
}

@media only screen and (px-to-rem(900) > width) {
	.about {
		padding-top: rubber-size(900, 60, 768, 50);
	}

	.quote {
		margin-top: rubber-size(900, 60, 768, 50);
		width: rubber-size(900, 664, 768, 575);
	}
	
	.separator-wrap {
		margin-top: rubber-size(900, 50, 768, 40);
	}

	.activity {
		margin-top: rubber-size(900, 50, 768, 40);
	}
}

@media only screen and (px-to-rem(768) > width) {
	.about {
		padding-top: rubber-size(768, 50, 576, 40);
	}

	.quote {
		margin-top: rubber-size(768, 50, 576, 40);
		width: rubber-size(768, 575, 576, 425);
	}

	.separator-wrap {
		margin-top: rubber-size(768, 40, 576, 35);
	}

	.activity {
		margin-top: rubber-size(768, 40, 576, 35);
	}
}

@media only screen and (px-to-rem(576) > width) {
	.quote {
		$width: calc((576 - 425) / 2);
		$margin-size: auto-rubber-size(576, $width, 480);

		width: calc(100% - ($margin-size * 2));
		margin-inline: $margin-size;
	}
}

@media only screen and (px-to-rem(480) > width) {
	.about {
		;
	}
}

