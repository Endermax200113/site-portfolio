@use '@sass/main' as *;
@use 'sass:string';

.background {
	position: absolute;
	width: 100%;
	height: 100%;
	overflow: hidden;
	z-index: 1;
}

.detail {
	$width-detail: string.unquote("calc(50vw + #{px-to-rem(220)})");
	
	position: absolute;
	top: px-to-rem(-133);
	right: px-to-rem(-100);
	width: $width-detail;
	height: 160%;
	background-color: $color-full-black;
	transform: rotate(9.67deg);

	&-transition {
		position: absolute;
		bottom: 0;
		width: 100%;
		height: px-to-rem(75);
		background: linear-gradient(transparent, $color-light-gray);
	}
}

@media only screen and (px-to-rem(1920) > width >= px-to-rem(1600)) {
	.detail {
		$width-rubber: rubber-size(1920, 220, 1600, 202);
		$width-detail: string.unquote("calc(50vw + #{$width-rubber})");

		width: $width-detail;
	}
}

@media only screen and (px-to-rem(1600) > width >= px-to-rem(1366)) {
	.detail {
		$width-rubber: rubber-size(1600, 202, 1366, 181);
		$width-detail: string.unquote("calc(50vw + #{$width-rubber})");

		width: $width-detail;
	}
}

@media only screen and (px-to-rem(1366) > width >= px-to-rem(1280)) {
	.detail {
		$width-rubber: px-to-rem(181);
		$width-detail: string.unquote("calc(50vw + #{$width-rubber})");

		width: $width-detail;
	}
}

@media only screen and (px-to-rem(1280) > width >= px-to-rem(1080)) {
	.detail {
		$width-rubber: rubber-size(1280, 181, 1080, 167);
		$width-detail: string.unquote("calc(50vw + #{$width-rubber})");

		width: $width-detail;
	}
}

@media only screen and (px-to-rem(1080) > width >= px-to-rem(900)) {
	.detail {
		$width-rubber: rubber-size(1080, 167, 900, 153);
		$width-detail: string.unquote("calc(50vw + #{$width-rubber})");

		width: $width-detail;
	}
}

@media only screen and (px-to-rem(900) > width) {
	.mobile {
		&-effects {
			position: absolute;
			width: 100%;
			height: 100%;
			background: linear-gradient(180deg, rgb(0 0 0 / 60%) 0%, rgb(0 0 0 / 60%) 15.1%, rgb(0 0 0 / 60%) 100%), radial-gradient(45.13% 44.99% at 54.86% 47.98%, rgb(19 19 19 / 2%) 0%, rgb(14 0 0 / 67%) 100%);
			z-index: 2;
		}

		&-image {
			position: absolute !important;
			object-fit: cover !important;
			z-index: 1 !important;
		}
	}
}